# Generated by Django 4.0.1 on 2023-03-08 05:12

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ImageModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(blank=True, upload_to='website_images', verbose_name='Image')),
                ('is_hero', models.BooleanField(default=False, verbose_name='Is hero')),
                ('is_divider', models.BooleanField(default=False, verbose_name='Is divider')),
                ('is_gallery', models.BooleanField(default=False, verbose_name='Is banner')),
            ],
            options={
                'verbose_name': 'Image',
                'verbose_name_plural': 'Images',
            },
        ),
        migrations.CreateModel(
            name='VolunteerModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('email', models.EmailField(max_length=100, verbose_name='Email')),
                ('phone', models.CharField(max_length=15, verbose_name='Phone')),
                ('whatsapp', models.CharField(max_length=15, verbose_name='Whatsapp Number')),
                ('social_media', models.CharField(max_length=15, verbose_name='Social Media')),
                ('gender', models.CharField(max_length=20, verbose_name='Gender')),
                ('pronouns', models.CharField(max_length=25, verbose_name='Pronouns')),
                ('date_of_birth', models.DateField(verbose_name='Date of Birth')),
                ('country', models.CharField(max_length=25, verbose_name='Country of Residence')),
                ('nationality', models.CharField(max_length=25, verbose_name='Nationality')),
                ('sector', models.CharField(max_length=255, verbose_name='Volunteering Sector')),
                ('mode_of_communication', models.CharField(max_length=50, verbose_name='Preferred Mode of Communication')),
                ('photo_sharing_consent', models.BooleanField(verbose_name='Photo Sharing Consent')),
                ('nominee1_name', models.CharField(max_length=100, verbose_name='Nominee 1 Name')),
                ('nominee1_social_media', models.CharField(max_length=50, verbose_name='Nominee 1 Social Media')),
                ('nominee1_country', models.CharField(max_length=50, verbose_name='Nominee 1 Country')),
                ('nominee1_contact', models.CharField(max_length=50, verbose_name='Nominee 1 Contact')),
                ('nominee2_name', models.CharField(max_length=100, verbose_name='Nominee 2 Name')),
                ('nominee2_social_media', models.CharField(max_length=50, verbose_name='Nominee 2 Social Media')),
                ('nominee2_country', models.CharField(max_length=50, verbose_name='Nominee 2 Country')),
                ('nominee2_contact', models.CharField(max_length=50, verbose_name='Nominee 2 Contact')),
            ],
            options={
                'verbose_name': 'Volunteer',
                'verbose_name_plural': 'Volunteers',
            },
        ),
        migrations.CreateModel(
            name='UserModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('username', models.CharField(max_length=255, unique=True)),
                ('email', models.EmailField(blank=True, max_length=60, null=True, verbose_name='email')),
                ('password', models.CharField(max_length=255)),
                ('password_plain', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('picture', models.ImageField(blank=True, null=True, upload_to='thumbnail', verbose_name='Picture')),
                ('is_blocked', models.BooleanField(default=False)),
                ('is_suspended', models.BooleanField(default=False)),
                ('is_user', models.BooleanField(default=False)),
                ('is_volunteer', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
    ]
